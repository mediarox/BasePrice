<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 */

/**
 * @category   Magenerds
 * @package    Magenerds_BasePrice
 * @subpackage view
 * @author     Florian Sydekum <f.sydekum@techdivision.com>
 * @copyright  Copyright (c) 2019 TechDivision GmbH (https://www.techdivision.com)
 * @link       https://www.techdivision.com/
 */

/**
 * @var $block \Magenerds\BasePrice\Block\AfterPrice
 * @var $viewModel \Magenerds\BasePrice\ViewModel\BasePriceViewModel
 */
$viewModel = $block->getViewModel();
$productId = $block->getProduct()->getId();
$swatchOptSelector = $viewModel->getSwatchOptSelector($productId);
$attributeIdSelector = $viewModel->getAttributeIdSelector($productId);
?>
<?php if ($block->isEnabled()): ?>
    <div class="baseprice-<?= $productId ?>">
        <?php echo $block->getBasePrice() ?>
    </div>
    <script type="text/javascript">
        require(['jquery', 'jquery/ui', 'domReady!'], function($) {
            $('body').on('updatePrice', function (e, data) {

                var swatchWidget = $('<?= $swatchOptSelector ?>').data('mage-SwatchRenderer');
                if(swatchWidget !== undefined) {
                    var options = _.object(_.keys(swatchWidget.optionsMap), {});

                    swatchWidget.element.find('.' + swatchWidget.options.classes.attributeClass + '[data-option-selected]').each(function () {
                        options[$('<?= $attributeIdSelector ?>').attr('data-attribute-id')] = $(this).attr('data-option-selected');
                    });
                    result = swatchWidget.options.jsonConfig.optionPrices[_.findKey(swatchWidget.options.jsonConfig.index, options)];
                } else {
                    var configurableWidget = $('#product_addtocart_form').data('mage-configurable');
                    if (configurableWidget !== undefined) {
                        var options = {};

                        configurableWidget.element.find(configurableWidget.options.superSelector + ' option:selected').each(function () {
                            if ($(this).val()) {
                                options[Number($(this).parent().prop('id').replace('attribute', ''))] = $(this).val();
                            }

                        });

                        var config = configurableWidget.option('spConfig');
                        result = config.optionPrices[_.findKey(config.index, options)];
                    }
                }
                var selector = '.product-info-price .baseprice-' +
                    '<?= $productId ?>';
                var basePriceField = $(selector);
                if (typeof result != 'undefined' && result.magenerds_baseprice_text.length && basePriceField.length) {
                    basePriceField.html(result.magenerds_baseprice_text);
                }
            });
        });
    </script>
<?php endif; ?>
